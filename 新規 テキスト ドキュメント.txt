
<!--
#### 5.2.3. devcontainerを利用して開発したい

開発環境をDockerコンテナとして利用することで、実環境に影響されずに開発することができます。

devcontainer.jsonの例です。

```json:devcontainer.json
{
  "name": "AWS CDK Development Container",
  "build": {
    "dockerfile": "Dockerfile",
    "context": ".."
  },
  "mounts": [
		{
			"source": "${localEnv:USERPROFILE}/.aws",
			"target": "/home/vscode/.aws",
			"type": "bind"
		}
  ],
  "features": {
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "charliermarsh.ruff",
        "ms-azuretools.vscode-docker",
        "esbenp.prettier-vscode",
        "dbaeumer.vscode-eslint",
        "amazonwebservices.amazon-q-vscode",
        "amazonwebservices.aws-toolkit-vscode",
        "ms-vscode-remote.remote-containers",
        "hediet.vscode-drawio",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "taichi.vscode-textlint",
        "donjayamanne.githistory",
        "eamodio.gitlens",
        "mechatroner.rainbow-csv",
        "yzhang.markdown-all-in-one",
        "ms-ceintl.vscode-language-pack-ja"
      ],
      "settings": {
          "terminal.integrated.defaultProfile.linux": "/bin/bash",
          "typescript.tsdk": "/usr/local/lib/node_modules/typescript/lib"
      }
    }
  },
  "postCreateCommand": "pip install awscli-local git-remote-codecommit; npm install -g aws-cdk-local",
  "remoteUser": "node"
}
```

Dockerfileの例です

```docker:Dockerfile
FROM mcr.microsoft.com/devcontainers/typescript-node:1-22-bullseye

# AWS CDKに必要な追加パッケージをインストール
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y install --no-install-recommends \
    python3 \
    python3-pip \
    jq \
    git \
    curl \
    unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

USER node
WORKDIR /home/node
```
-->
